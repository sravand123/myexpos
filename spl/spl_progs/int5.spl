alias userSP R0;
alias syscall  R1;
userSP = SP;

syscall = [[PTBR + 2 * ((userSP - 5) / 512)] * 512 + (userSP - 5) % 512];
alias filename R2;
alias retval R3;
alias processtable R4;
alias perprocess R5;
processtable = PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16;
retval = [PTBR+2*(userSP-1)/512]*512 + (userSP -1)%512;
perprocess = [processtable+11]*512+496;
filename = [[PTBR+2*(userSP-4)/512]*512 + (userSP -4)%512];
[processtable+13] =SP;
[processtable + 9] =syscall;
SP = [processtable+ 11]*512-1;
alias counter R10;
counter = 0;
if(syscall == 2) then
  alias fentry R6;
  alias openentry R7;
  while(counter<16)do
       if([perprocess+counter*2]==-1)then
            fentry = counter;
            break;
      endif;
  counter = counter +1;
  endwhile;
  multipush(R0,R1,R2,R3,R4,R5,R6);
  R1 = 3;
  R2 = filename;
  call FILE_MANAGER;
  openentry = R0;
  multipop(R0,R1,R2,R3,R4,R5,R6);
  if(openentry<0)then
  SP = [processtable+13];
  [processtable+9]=0;
  [retval] = -1;
  ireturn;
  endif;
  [perprocess+2*fentry] = FILE;
  [perprocess+2*fentry+1] = openentry;
  SP = [processtable+13];
  [processtable+9]=0;
  [retval] = fentry;
  ireturn;
endif;


if(syscall == 3) then
   if(filename <0 || filename >7 || [perprocess+2*filename]!=FILE) then
      SP = [processtable+13];
      [processtable+9]=0;
      [retval]= -1;
      ireturn;
   endif;
   multipush(R0,R1,R2,R3,R4,R5);
   R1 = 4;
   R2 = [perprocess+2*filename+1];
   call FILE_MANAGER;
   multipop(R0,R1,R2,R3,R4,R5);
   [perprocess+2*filename] = -1;
   SP = [processtable+13];
   [processtable+9]=0;
   [retval] = 0;
   ireturn;
endif;

if(syscall==6)then
   if(filename <0 || filename >7 || [perprocess+2*filename]!=FILE) then
      SP = [processtable+13];
      [processtable+9]=0;
      [retval]= -1;
      ireturn;
   endif;
   alias openentry R6;
      alias inodeentry R7;
      openentry  = [perprocess+2*filename+1];
      inodeentry = [OPEN_FILE_TABLE+4*openentry+0];
      alias inodetable R8;
      alias opentable R9;
      alias function_ret R10;
      alias lseek R11;
      inodetable = INODE_TABLE+inodeentry*16;
      opentable = OPEN_FILE_TABLE+openentry*4;
       multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);
                    R3 = [SYSTEM_STATUS_TABLE+1];
                    R2 = inodeentry;
                    R1 = 4;
                    call RESOURCE_MANAGER;
                    function_ret = R0;
      multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9);  
      if(function_ret==-1)then
         [retval] = -1;
         SP = [processtable+13];
         [processtable+9]=0;
         ireturn;          
      endif;   
      lseek = OPEN_FILE_TABLE+4*openentry+2;
      alias offset R12;
      alias filesize R13;
      offset  =  [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + ((userSP - 3) % 512)];
      if([opentable+0]==INODE_ROOT)then
           filesize=480;
      else
          filesize = [inodetable+2];
      endif;
     if([lseek]+offset<0)then
          multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R11,R12,R13);
                    R3 =  [SYSTEM_STATUS_TABLE+1];
                    R2 = inodeentry;
                    R1 = 5;
                    call RESOURCE_MANAGER;
         multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R11,R12,R13);
         [retval]=-2;
         SP = [processtable+13];
         [processtable+9]=0;
         ireturn;               
    endif;
    if(offset==0)then 
     [lseek]=0;
         multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R11,R12,R13);
                    R3 =  [SYSTEM_STATUS_TABLE+1];
                    R2 = inodeentry;
                    R1 = 5;
                    call RESOURCE_MANAGER;
         multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R11,R12,R13);
         [retval]=0;
         SP = [processtable+13];
         [processtable+9]=0;
         ireturn;               
    endif;
   if([lseek]+offset>filesize)then
      [opentable+2]=filesize;
   else
            [lseek]=[lseek]+offset;
  endif;
   multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R11,R12,R13);
                    R3 =  [SYSTEM_STATUS_TABLE+1];
                    R2 = inodeentry;
                    R1 = 5;
                    call RESOURCE_MANAGER;
  multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R11,R12,R13);
 [retval]=0;
 SP = [processtable+13];
 [processtable+9]=0;
 ireturn;        
   
endif;
   
