[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 27;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]  = SP;
SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
alias userSP R0;
userSP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
alias processtable R1;
processtable = PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16;
alias ret_val R2;
ret_val =  [PTBR+2*(userSP-1)/512]*512+(userSP-1)%512;
alias username R3;
alias password R7;
username  =  [[PTBR+2*(userSP-4)/512]*512+(userSP-4)%512];
password =  [[PTBR+2*(userSP-3)/512]*512+(userSP-3)%512];

alias userentry R4;


if([SYSTEM_STATUS_TABLE+1]!=1)then
   [processtable+9]=0;
   SP = [processtable+13];
   [ret_val] = -2;
   ireturn;
endif;

alias counter R5;
counter = 0;
while(counter<16)do
  if([USER_TABLE+counter*2]==username)then 
       userentry = counter;
       break;
endif;
counter = counter+1;
endwhile;

if(counter==16)then 
   [processtable+9]=0;
   SP = [processtable+13];
   [ret_val] = -1;
   ireturn;
endif;



encrypt password;

if(password != [USER_TABLE+userentry*2+1])then 
   [processtable+9]=0;
   SP = [processtable+13];
   [ret_val] = -1;
   ireturn;
endif;

[PROCESS_TABLE+2*16+4] = CREATED;
[PROCESS_TABLE+2*16+3] = userentry;
[processtable+4] = WAIT_PROCESS;
[processtable+5] = 2;
[SYSTEM_STATUS_TABLE]=userentry; 
multipush(R0,R1,R2,R3,R4,R5,R6,R7);
call SCHEDULER;
multipop(R0,R1,R2,R3,R4,R5,R6,R7);

[processtable+9]=0;
SP = [processtable+13];
[ret_val] = 0;
ireturn;
