
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+9]=-1;

[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;
backup;
multipush(EIP);

breakpoint;
alias pid R4;
alias userSP R5;
alias retval R0;
alias functionNum R1;
userSP=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
pid= [SYSTEM_STATUS_TABLE+1];


if(EC!=0 || (userSP == PTLR*512-1)) then
   multipush(R0,R1,R4,R5);
   R1=3;
   R2 = [SYSTEM_STATUS_TABLE+1];
   call MOD_1;
   multipop(R0,R1,R4,R5);
   multipush(R0,R1,R4,R5);
   call MOD_5;
   multipop(R0,R1,R4,R5);
endif;


if(EC==0) then
  if(EPN>=4 && EPN <=7) then

   multipush(R0,R1,R4,R5);
   R1 = 5;     
   R2 = [DISK_MAP_TABLE + 10 * [SYSTEM_STATUS_TABLE + 1] + EPN ];
   call MOD_2;
   
   [PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2*EPN]=R0;
   [PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2*EPN+1]="1100";
   multipop(R0,R1,R4,R5);
   endif;
  if(EPN>=2 && EPN <=3) then

    multipush(R0,R1,R4,R5);
    R1=1;
    call MOD_2;

    [PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2*EPN]=R0;
    [PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2*EPN+1]="1110";
    multipop(R0,R1,R4,R5);

    multipush(R0,R1,R4,R5);
    R1=1;
    call MOD_2;

    [PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2*EPN+2]=R0;
    [PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2*EPN+3]="1110";
    multipop(R0,R1,R4,R5);
  endif;
endif;
multipop(EIP);
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+9]=0;

restore;
SP=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];

SP=SP+1;

[[PTBR+2*(SP/512)]*512+(SP%512)]=EIP;

ireturn;
   
