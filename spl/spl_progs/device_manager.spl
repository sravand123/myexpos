alias functionNum R1;
alias currentPID R2;
alias Word R3;

//Terminal write
if(functionNum==3) then
   multipush(R0,R1,R2,R3);
   functionNum=8;
   call MOD_0;
   multipop(R0,R1,R2,R3);
   print Word;
   multipush(R0,R1,R2,R3);
   functionNum=9;
   call MOD_0;
   alias ret_val R5;
   ret_val=R0;
   multipop(R0,R1,R2,R3);
   return;
endif;

//Terminal Read
if(functionNum==4) then
   multipush(R0,R1,R2,R3);
   alias funcNum R1;
   alias pid R2;
   funcNum=8;
   pid=[SYSTEM_STATUS_TABLE+1];
   call MOD_0;
   multipop(R0,R1,R2,R3);
   read;
   [PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1])*16+4]=WAIT_TERMINAL;
   multipush(R0,R1,R2,R3);
   call MOD_5;
   multipop(R0,R1,R2,R3);
   alias word R3;
   alias phys_add R4;
   phys_add = [PTBR+2*(word/512)]*512+(word%512);
   [phys_add]=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+8];
   return;
endif;

//Disk Load
alias pageno R3;
alias blockno R4;
if(functionNum==2) then
   multipush(R0,R1,R2,R3,R4);
   R1=3;
   R2 = currentPID;
   call MOD_0;
   multipop(R0,R1,R2,R3,R4);
   [DISK_STATUS_TABLE+1]=0;
   [DISK_STATUS_TABLE+2]=pageno;
   [DISK_STATUS_TABLE+3]=blockno;
   [DISK_STATUS_TABLE+4]=currentPID;
   load(pageno,blockno);
   [PROCESS_TABLE+(currentPID)*16+4]=WAIT_DISK;
   multipush(R0,R1,R2,R3,R4);
   call MOD_5;
   multipop(R0,R1,R2,R3,R4);
   return;
endif;
   


//Disk store

if(functionNum==1)then
   multipush(R1,R2,R3,R4);
   R1 = 3;
   R2 = currentPID;
   call RESOURCE_MANAGER;
   multipop(R1,R2,R3,R4);
   [DISK_STATUS_TABLE+0]=1;
   [DISK_STATUS_TABLE+1]=1;
   [DISK_STATUS_TABLE+2]=R3;
   [DISK_STATUS_TABLE+3]=R4;
   [DISK_STATUS_TABLE+4]=R2;
   [PROCESS_TABLE+R2*16+4]=WAIT_DISK;
   store(R3,R4);
   multipush(R1,R2,R3,R4);
   call MOD_5;
   multipop(R1,R2,R3,R4);
   return;
endif;


